syntax = "proto3";

package event;

service EventService{
  rpc GetAllEvent(QueryParamsRequest) returns (AllEventResponse); 
  rpc GetEventById(EventByIdRequest) returns (EventResponse);
  rpc GetAllEventByCategoryName(CategoryNameRequest) returns (AllEventResponse);
  rpc GetCategoryById(CategoryByIdRequest) returns (CategoryResponse);
  rpc GetAllCategory(Empty) returns (AllCategoryResponse);
  rpc CreateEvent(CreateEventRequest) returns (EventResponse);
  rpc CreateCategory(CreateCategoryRequest) returns (CategoryResponse);
  rpc UpdateEvent(UpdateEventRequest) returns (EventResponse);
  rpc UpdateCategory(UpdateCategoryRequest) returns (CategoryResponse);
  rpc CreateSpeaker(CreateSpeakerRequest) returns (SpeakerResponse);
  rpc GetAllSpeaker(Empty) returns (AllSpeakerResponse);
  rpc getAllGuest(Empty) returns (AllGuestResponse);
  rpc CreateGuest(CreateGuestRequest) returns (GuestResponse);
  rpc CancelEvent(CancelEventRequest) returns (CancelEventResponse);
  //rpc UpdateEventDocument (UpdateEventDocumentRequest) returns (UpdateEventDocumentResponse);
  rpc CheckOwnerShip(CheckOwnerShipRequest) returns (CheckOwnerShipResponse);
  //rpc UpdateEventVideoIntro(UpdateEventVideoIntroRequest) returns (EventResponse);
  rpc SendEventInvites (SendEventInvitesRequest) returns (SendEventInvitesResponse);
  //rpc AcceptInvitation(AcceptInvitationRequest) returns (AcceptInvitationResponse);
  //rpc DeclineInvitation(DeclineInvitationRequest) returns (DeclineInvitationResponse);
  rpc IsExistEvent(EventByIdRequest) returns (IsExistEventResponse);
}

message Empty{}

message IsExistEventResponse{
  bool isExist = 1;
}

message SendEventInvitesRequest{
  string eventId = 1;
  repeated string emails = 2;
}

message SendEventInvitesResponse {
  string message = 1;
  bool success = 2;
}

message UpdateEventVideoIntroRequest{
  string id = 1;
  string videoUrl = 2;
}

message CheckOwnerShipRequest{
  string eventId = 1;
  string userId = 2;
}

message CheckOwnerShipResponse{
  bool isOwner = 1;
}

message UpdateEventFilesRequest {
    string id = 1;                
    string field = 2;             
    repeated string fileIds = 3;  
    string videoUrl = 4;          
    repeated string deletedFiles = 5;             
}

message UpdateEventDocumentRequest {
  string id = 1; 
  int32 index = 2; 
  string document = 3; 
  string userId = 4;
}

message UpdateEventDocumentResponse {
  string message = 1;
  EventType event = 2; 
}

message CancelEventRequest{
  string id = 1;
  string userId = 2;
}

message CancelEventResponse{
  string message = 1;
}

message GuestResponse{
  Guest guest = 1;
}

message AllGuestResponse{
  repeated Guest guests = 1;
  Meta meta = 2;
}

message CreateGuestRequest{
  string name = 1;
  string jobTitle = 2;
  optional string organization = 3;
  optional string linkSocial = 4;
  optional string avatar = 5;
}

message CreateSpeakerRequest{
  string name = 1;
  string email = 2;
  optional string avatar = 3;
  optional string phone = 4;
  string jobTitle = 5;
  optional string bio = 6;
  optional string linkFb = 7;
}

message SpeakerResponse{
  Speaker speaker = 1;
}

message AllSpeakerResponse{
  repeated Speaker speakers = 1;
  Meta meta = 2;
}

message FindByIdRequest{
    string id = 1;
}

message DecodeAccessResponse{
    string id = 1;
    string email = 2;
    string name = 3;
    string avatar = 4;
    string oldAvatarId = 5;
    string phoneNumber = 6;
    bool isActive = 7;
    string role = 8;
    string lastLoginAt = 9;
    string createdAt = 10;
    string updatedAt = 11;
}

message Meta{
  optional int32 page = 1;
  optional int32 limit = 2;
  optional int32 totalPages = 3;
  int32 totalItems = 4;
  int32 count = 5;
}

message QueryParamsRequest{
  map<string, string> query = 1;
}

message UpdateCategoryRequest{
  string id = 1;
  optional string name = 2;
  optional string description = 3;
}

message CategoryNameRequest{
  string name = 1;
}

message CreateCategoryRequest{
  string name = 1;
  optional string description = 2;
}

message CategoryByIdRequest{
  string id = 1;
}

message EventByIdRequest{
  string id = 1;
}

message AllCategoryResponse{
  repeated Category categories = 1;
  Meta meta = 2;
}

message EventResponse{
  EventType event = 1;
}

message AllEventResponse{
  repeated EventType events = 1;
  Meta meta = 2;
}

message CategoryResponse{
  Category category = 1;
}

message Category{
  string id = 1;
  string name = 2;
  string description = 3;
}

message CreateEventRequest {
  string name = 1;
  string description = 2;
  string startDate = 3;
  string endDate = 4;
  string location = 5;
  repeated string guestIds = 6;
  string categoryId = 7;
  int32 maxParticipants = 8;
  optional string banner = 9;
  optional string videoIntro = 10;
  repeated string documents = 11;
  CreatedBy createdBy = 12;
  repeated SponsorType sponsors = 13;
  optional BudgetType budget = 14;
  repeated ScheduleWithoutId schedule = 15;
}

message UpdateEventRequest {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional string startDate = 4;
  optional string endDate = 5;
  optional string location = 6;
  repeated string guestIds = 7;
  optional string categoryId = 8;
  optional int32 maxParticipants= 9;
  optional string banner=10;
  optional string videoIntro = 11;
  repeated string documents=12;
  optional string status=13;
  repeated SponsorType sponsors = 14;
  optional BudgetType budget = 15;
  repeated ScheduleWithoutId schedule = 16;
  repeated InvitedUser invitedUsers = 17;
}


message EventType {
  string id = 1;
  string name = 2;
  string description = 3;
  string startDate = 4;
  string endDate = 5;
  string location = 6;
  repeated ScheduleType schedule = 7;
  repeated string guestIds = 8;
  string categoryId = 9;
  int32 maxParticipants = 10;
  optional string banner = 11;
  optional string videoIntro = 12;
  repeated string documents = 13;
  string status = 14;
  string createdAt = 15;
  string updatedAt = 16;
  CreatedBy createdBy = 17;
  repeated SponsorType sponsors = 18;
  optional BudgetType budget = 19;
  repeated InvitedUser invitedUsers = 20;
}

message InvitedUser {
    string userId = 1;
    string email = 2;
  optional string status = 3;
}

message Speaker{
  string id = 1;
  string name = 2;
  string bio = 3;
  string linkFb = 4;
  string avatar = 5;
  string email = 6;
  optional string phone = 7;
  string jobTitle = 8;
  string createdAt = 9;
  string updatedAt = 10;
}

message Guest{
  string id = 1;
  string name = 2;
  string jobTitle = 3;
  optional string organization = 4;
  optional string linkSocial = 5;
  string avatar = 6;
  string createdAt = 7;
  string updatedAt = 8;
}

message SponsorType {
  string name = 1;
  string logo = 2;
  string website = 3;
  int32 contribution = 4;
}

message ExpenseOrRevenueType {
  string desc = 1;
  int32 amount = 2;
  string date = 3;
}

message BudgetType {
  int32 totalBudget = 1;
  repeated ExpenseOrRevenueType expenses = 2;
  repeated ExpenseOrRevenueType revenue = 3;
}

message ScheduleWithoutId {
  string title = 2;
  string startTime = 3;
  string endTime = 4;
  string description = 5;
  repeated string speakerIds = 6;
}

message ScheduleType{
  string id = 1;
  string title = 2;
  string startTime = 3;
  string endTime = 4;
  string description = 5;
  repeated string speakerIds = 6;
}

message CreatedBy{
  string id = 1;
  string email = 2;
}